<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Epicor.Mfg.IF.IIssueReturn</name>
    </assembly>
    <members>
        <member name="T:Epicor.Mfg.BO.IssueReturnDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnDataSet.IssueReturnDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnDataSet.LegalNumGenOptsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnDataSet.SelectedSerialNumbersDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnDataSet.SNFormatDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnDataSet.IssueReturnRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnDataSet.LegalNumGenOptsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnDataSet.SelectedSerialNumbersRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnDataSet.SNFormatRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnDataSet.IssueReturnRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnDataSet.LegalNumGenOptsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnDataSet.SelectedSerialNumbersRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnDataSet.SNFormatRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.IF.IIssueReturn">
            <summary>
            Use this function to enter inventory issues or returns.
            1) [Hold] Special public methods for DDSLs FromWhse and ToWhse as they have special conditions.
            2) [ FYI ]This procedure gets called from lots of other program too -
            im/ime20.w flmenu.w am/ame10.w am/ame20-am.p am/ame20-aw.p am/ame20-mm.p am/ame20-mw.p
            Only am/ame20-dg.w uses MtlQueue functionality
            </summary>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.NegativeInventoryTest(System.String,System.String,System.String,System.String,System.String,System.Decimal,System.Decimal,System.String@,System.String@)">
            <summary>
            To test on hand quantity of the bin - i.e. whether it will go negative.
            Call this method on change of Quantity.
            </summary>
            <param name="pcPartNum">Part Number</param>
            <param name="pcWhseCode">Warehouse Code</param>
            <param name="pcBinNum">Bin Number</param>
            <param name="pcLotNum">Lot Number</param>
            <param name="pcDimCode">From UNIT OF MEASURE (old Dimension Code)</param>
            <param name="pdDimConvFactor">Obsolete Dimension Conversion Factor</param>
            <param name="pdTranQty">Quantity (in stocking uom)</param>
            <param name="pcNeqQtyAction">Valid values are STOP, NONE or ASK User. If Ask User, the user can decide to go ahead with the update even if the qty is negative</param>
            <param name="pcMessage">Error message passed back from the business logic.</param>
            <returns>pcNeqQtyAction</returns>
            <returns>pcMessage</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetAvailTranDocTypes(System.String@)">
            <remarks>
            &amp;QTableName - MANDATORY - Name of table to find
            &amp;QLock - type of lock to put on record NO-LOCK (default) or EXCLUSIVE-LOCK
            &amp;QWhere - MANDATORY - criteria to find record
            &amp;QFind - type of find to perform, unique, first, next or last
            &amp;Columns - List of columns
            </remarks>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetList(System.String,System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            List of jobs that can be selected for Mass Issue.
            </summary>
            <param name="whereClauseJobHead">Where condition without the where word</param>
            <param name="whereClauseJobAsmbl">Where condition without the where word</param>
            <returns>Returns Epicor.Mfg.BO.IssueReturnJobAsmblDataSet</returns>
            <param name="pageSize"># of records returned. 0 means all</param>
            <param name="absolutePage"></param>
            <param name="morePages">Are there more pages ? Yes/No</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetListJobs(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            List of jobs that can be selected for Mass Issue.
            </summary>
            <param name="whereClauseJobHead">Where condition without the where word</param>
            <returns>Returns Epicor.Mfg.BO.IssueReturnJobListDataSet</returns>
            <param name="pageSize"># of records returned. 0 means all</param>
            <param name="absolutePage"></param>
            <param name="morePages">Are there more pages ? Yes/No</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetNewIssueReturn(System.String,System.String,System.String,Epicor.Mfg.BO.IssueReturnDataSet)">
            <summary>
            Call this method to create a new Epicor.Mfg.BO.IssueReturnDataSet with
            default values.
            </summary>
            <param name="pcTranType">Material movement type XXX-XXX e.g STK-MTL. It can be blank when a valid MtlQueue RowIdent is passed.</param>
            <param name="pcMtlQueueRowID">Progress database RowId of MtlQueue record</param>
            <param name="pCallProcess">Calling Process</param>
            <param name="ds">IssueReturnDataSet</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetNewIssueReturnFromJob(System.String,System.Int32,System.String,System.String,Epicor.Mfg.BO.IssueReturnDataSet)">
            <summary>
            Call this method to create a new Epicor.Mfg.BO.IssueReturnDataSet with
            default values.
            </summary>
            <param name="pcFromJobNum">From Job number.</param>
            <param name="piFromAssemblySeq">From Assembly Seq.</param>
            <param name="pcTranType">Material movement type XXX-XXX e.g STK-MTL</param>
            <param name="pcMtlQueueRowID">Progress database rowid for MtlQueue record</param>
            <param name="ds">IssueReturnDataSet</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetNewIssueReturnToJob(System.String,System.Int32,System.String,System.String,System.String@,Epicor.Mfg.BO.IssueReturnDataSet)">
            <summary>
            Call this method to create a new Epicor.Mfg.BO.IssueReturnDataSet with
            default values.
            </summary>
            <param name="pcToJobNum">To Job number.</param>
            <param name="piToAssemblySeq">To Assembly Seq.</param>
            <param name="pcTranType">Material movement type XXX-XXX e.g STK-MTL</param>
            <param name="pcMtlQueueRowID">Progress database rowid for MtlQueue record</param>
            <param name="pcMessage">Non-Error, informational message</param>
            <param name="ds">IssueReturnDataSet</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetNewJobAsmblMultiple(System.String,System.String,System.String,Epicor.Mfg.BO.SelectedJobAsmblDataSet,System.String@)">
            <summary>
            This method creates multiple IssueReturnJobs rows using IssueReturnJobSearch dataset.
            </summary>
            <param name="pcTranType">Material movement type XXX-XXX e.g STK-MTL</param>
            <param name="pcMtlQueueRowID">Progress database rowid for MtlQueue record</param>
            <param name="pCallProcess">Calling Process</param>
            <param name="ds">SelectedJobAsmblDataSet</param>
            <param name="pcMessage">Non-Error, informational message</param>
            <returns>IssueReturnDataSet</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetNewJobAsmblSearch(Epicor.Mfg.BO.SelectedJobAsmblDataSet)">
            <summary>
            This method creates a new ttSelectedJobAsmbl row entry.
            </summary>
            <param name="ds">SelectedJobAsmblDataSet</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetNewPartMultiple(System.String,System.String,Epicor.Mfg.BO.SelectedPartDataSet,System.String@)">
            <summary>
            This method creates multiple IssueReturnJobs rows using IssueReturnJobSearch dataset.
            </summary>
            <param name="pcTranType">Material movement type XXX-XXX e.g STK-MTL</param>
            <param name="pcMtlQueueRowID">Progress database rowid for MtlQueue record</param>
            <param name="ds">SelectedPartDataSet</param>
            <param name="pcMessage">Non-Error, informational message</param>
            <returns>IssueReturnDataSet</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetNewPartNum(System.String,System.String,System.String,Epicor.Mfg.BO.IssueReturnDataSet)">
            <summary>
            Call this method to create a new Epicor.Mfg.BO.IssueReturnDataSet with
            Part#.
            </summary>
            <param name="pcPartNum">Part number</param>
            <param name="pcTranType">Material movement type XXX-XXX e.g STK-UKN</param>
            <param name="pcMtlQueueRowID">Progress database rowid for MtlQueue record</param>
            <param name="ds">IssueReturnDataSet</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetNewPartSearch(Epicor.Mfg.BO.SelectedPartDataSet)">
            <summary>
            This method creates a new ttSelectedParts row entry.
            </summary>
            <param name="ds">SelectedPartDataSet</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetRows(System.String,System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            List of jobs that can be selected for Mass Issue.
            </summary>
            <param name="whereClauseJobHead">Where condition without the where word</param>
            <param name="whereClauseJobAsmbl">Where condition without the where word</param>
            <returns>Returns Epicor.Mfg.BO.IssueReturnJobAsmblDataSet</returns>
            <param name="pageSize"># of records returned. 0 means all</param>
            <param name="absolutePage"></param>
            <param name="morePages">Are there more pages ? Yes/No</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetSelectSerialNumbersParams(Epicor.Mfg.BO.IssueReturnDataSet)">
            <summary>
            Gets parameters required for launching Select Serial Numbers
            </summary>
            <param name="ds">Issue Return data set</param>
            <returns>The SelectSerialNumbersParams dataset</returns>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetUnissuedQty(Epicor.Mfg.BO.IssueReturnDataSet)">
            <summary>
            Call this method to set the Qty to the remaining unissued amount.
            </summary>
            <param name="ds">IssueReturnDataSet</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.GetUnpickSettings(Epicor.Mfg.BO.IssueReturnDataSet)">
            <summary>
            Sets ttIssueReturn fields for Unpick
            </summary>
            <param name="ds">Issue Return data set</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.IsValidAssembly(System.String,System.Int32,System.Boolean@)">
            <summary>
            Validate if an assembly is valid for a job. if not returns false,
            otherwise returns true.
            </summary>
            <param name="pcJobNum">Job Number</param>
            <param name="piAssemblySeq">A sequence number that uniquely
            identifies the JobAsmbl record within the JobNum.</param>
            <param name="plFound">Found or not</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.JobExists(System.String,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Check JobNum and return JobRelease and JobClosed
            </summary>
            <param name="ipJobNum">JobNum which should check</param>
            <param name="opJobReleased">Job Released</param>
            <param name="opJobClosed">Job Closed</param>
            <param name="opJobExists">Job exists</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.OnChangeFromAssemblySeq(System.Int32,Epicor.Mfg.BO.IssueReturnDataSet,System.String)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.FromAssemblySeq changes.
            </summary>
            <param name="piFromAssemblySeq">From Assembly Seq</param>
            <param name="ds">IssueReturnDataSet</param>
            <param name="pCallProcess">Calling Process value</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.OnChangeFromBinNum(System.Boolean,Epicor.Mfg.BO.IssueReturnDataSet)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.FromBinNum changes.
            </summary>
            <param name="plOverrideBinChange">User said yes to bin changing msg</param>
            <param name="ds">IssueReturnDataSet</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.OnChangeFromJobNum(System.String,Epicor.Mfg.BO.IssueReturnDataSet,System.String)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.FromJobNum changes.
            </summary>
            <param name="pcFromJobNum">From Job Number</param>
            <param name="ds">IssueReturnDataSet</param>
            <param name="pCallProcess">Calling Process value</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.OnChangeFromJobSeq(Epicor.Mfg.BO.IssueReturnDataSet,System.String,System.String@)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.FromJobNum changes.
            </summary>
            <param name="ds">IssueReturnDataSet</param>
            <param name="pCallProcess">Calling Process value</param>
            <param name="pcMessage">Non-error, informational message</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.onChangeFromWarehouse(Epicor.Mfg.BO.IssueReturnDataSet,System.String)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.PartNum changes.
            </summary>
            <param name="ds">IssueReturnDataSet</param>
            <param name="pCallProcess">Calling Process value</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.OnChangeLotNum(System.String,Epicor.Mfg.BO.IssueReturnDataSet)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.LotNum changes.
            </summary>
            <param name="pcLotNum">Proposed LotNum value</param>
            <param name="ds">IssueReturnDataSet</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.OnChangePartNum(Epicor.Mfg.BO.IssueReturnDataSet,System.String)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.PartNum changes.
            </summary>
            <param name="ds">IssueReturnDataSet</param>
            <param name="pCallProcess">Calling Process value</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.OnChangeToAssemblySeq(Epicor.Mfg.BO.IssueReturnDataSet,System.String)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.ToAssemblySeq changes.
            </summary>
            <param name="ds">IssueReturnDataSet</param>
            <param name="pCallProcess">Calling Process value</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.OnChangeToJobNum(Epicor.Mfg.BO.IssueReturnDataSet,System.String,System.String@)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.ToJobNum changes.
            </summary>
            <param name="ds">IssueReturnDataSet</param>
            <param name="pCallProcess">Calling Process value</param>
            <param name="pcMessage">Non-Error, informational message</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.OnChangeToJobSeq(Epicor.Mfg.BO.IssueReturnDataSet,System.String,System.String@)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.ToJobSeq changes.
            </summary>
            <param name="ds">IssueReturnDataSet</param>
            <param name="pCallProcess">Calling Process value</param>
            <param name="pcMessage">Non-Error, informational message</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.onChangeToWarehouse(Epicor.Mfg.BO.IssueReturnDataSet,System.String)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.PartNum changes.
            </summary>
            <param name="ds">IssueReturnDataSet</param>
            <param name="pCallProcess">Calling Process value</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.OnChangeTranQty(System.Decimal,Epicor.Mfg.BO.IssueReturnDataSet)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.TranQty changes.
            This method performs validation on TranQty and sets the Issued Complete flag.
            </summary>
            <param name="pdTranQty">Transaction Qty</param>
            <param name="ds">IssueReturnDataSet</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.OnChangeUM(System.String,Epicor.Mfg.BO.IssueReturnDataSet)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.UM changes.
            </summary>
            <param name="pUM">Transaction UOM</param>
            <param name="ds">IssueReturnDataSet</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.OnChangingFromBinNum(Epicor.Mfg.BO.IssueReturnDataSet,System.String@)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.FromBinNum is changing.
            </summary>
            <param name="ds">IssueReturnDataSet</param>
            <param name="pcMessage"> Warning if serial numbers have already been selected for another bin.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.OnChangingJobSeq(System.Int32,System.String,System.String,Epicor.Mfg.BO.IssueReturnDataSet)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSetjobseq (either to or from is changing)
            </summary>
            <param name="piJobSeq">JobSeq</param>
            <param name="pcDirection">Direction</param>
            <param name="pCallProcess">Calling Process value</param>
            <param name="ds">IssueReturnDataSet</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.OnChangingToJobSeq(System.Int32,Epicor.Mfg.BO.IssueReturnDataSet)">
            <summary>
            Call this method when the value of Epicor.Mfg.BO.IssueReturnDataSet.ToJobSeq is changing.
            </summary>
            <param name="piToJobSeq"> Propose ToJobSeq value.</param>
            <param name="ds">IssueReturnDataSet</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.PerformMaterialMovement(System.Boolean,Epicor.Mfg.BO.IssueReturnDataSet,System.String@,System.String@)">
            <summary>
            Perform Material Movement.
            </summary>
            <param name="plNegQtyAction">when TranQty changes, perform NegativeInventoryTest. Provide the answer of that test here.</param>
            <param name="ds">IssueReturnDataSet</param>
            <param name="legalNumberMessage">The legal number message. Can be blank.</param>
            <param name="partTranPKs">The PartTran primary keys.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.PreGetNewIssueReturn(System.String,System.String@,System.String@,System.Decimal@)">
            <summary>
            This method will check, depending on the Tran Type, if the available quantity
            has been reduced before the creation of the issue return.
            </summary>
            <param name="pcMtlQueueRowID">Progress database RowId of MtlQueue record</param>
            <param name="pcAction">The action to be taken.</param>
            <param name="pcMessage">Error message passed back from the business logic.</param>
            <param name="pdQtyAvailable">The on hand qty for the part bin specified in the material queue.</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.PrePerformMaterialMovement(Epicor.Mfg.BO.IssueReturnDataSet,System.Boolean@)">
            <summary>
            This method will return a record in the LegalNumGenOpts datatable if
            a legal number is required for this transaction. The RequiresUserInput
            flag will indicate if this legal number requires input from the user. If
            it does, the LegalNumberPrompt business objects needs to be called to
            gather that information. This method should be called when the user
            saves the record but before the Update method is called.
            </summary>
            <param name="ds">Issue Return data set</param>
            <param name="requiresUserInput">Indicates if the legal number requires user input</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.setQuantity">
            <remarks>
            &amp;QTableName - MANDATORY - Name of table to find
            &amp;QLock - type of lock to put on record NO-LOCK (default) or EXCLUSIVE-LOCK
            &amp;QWhere - MANDATORY - criteria to find record
            &amp;QFind - type of find to perform, unique, first, next or last
            &amp;Columns - List of columns
            </remarks>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.ValidateSN(Epicor.Mfg.BO.IssueReturnDataSet,System.String,System.Boolean@)">
            <summary>
            Validates that a single serial number is valid for this transaction
            </summary>
            <param name="ds">Issue Return data set</param>
            <param name="serialNumber">Serial number to validate.</param>
            <param name="isVoided">Serial Number Voided flag</param>
        </member>
        <member name="M:Epicor.Mfg.IF.IIssueReturn.validUOM(System.String,System.String)">
            <remarks>
            &amp;QTableName - MANDATORY - Name of table to find
            &amp;QLock - type of lock to put on record NO-LOCK (default) or EXCLUSIVE-LOCK
            &amp;QWhere - MANDATORY - criteria to find record
            &amp;QFind - type of find to perform, unique, first, next or last
            &amp;Columns - List of columns
            </remarks>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnJobAsmblDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnJobAsmblDataSet.IssueReturnJobAsmblDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnJobAsmblDataSet.IssueReturnJobAsmblRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnJobAsmblDataSet.IssueReturnJobAsmblRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnJobListDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnJobListDataSet.JobHeadDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnJobListDataSet.JobHeadRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.IssueReturnJobListDataSet.JobHeadRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.SelectedJobAsmblDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.SelectedJobAsmblDataSet.SelectedJobAsmblDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.SelectedJobAsmblDataSet.SelectedJobAsmblRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.SelectedJobAsmblDataSet.SelectedJobAsmblRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.SelectedPartDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.SelectedPartDataSet.SelectedPartsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.SelectedPartDataSet.SelectedPartsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.SelectedPartDataSet.SelectedPartsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.SelectSerialNumbersParamsDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.SelectSerialNumbersParamsDataSet.SelectSerialNumbersParamsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.SelectSerialNumbersParamsDataSet.SelectSerialNumbersParamsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.SelectSerialNumbersParamsDataSet.SelectSerialNumbersParamsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtIssueReturnDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtIssueReturnDataSet.IssueReturnDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtIssueReturnDataSet.LegalNumGenOptsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtIssueReturnDataSet.SelectedSerialNumbersDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtIssueReturnDataSet.SNFormatDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtIssueReturnDataSet.IssueReturnRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtIssueReturnDataSet.LegalNumGenOptsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtIssueReturnDataSet.SelectedSerialNumbersRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtIssueReturnDataSet.SNFormatRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtIssueReturnDataSet.IssueReturnRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtIssueReturnDataSet.LegalNumGenOptsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtIssueReturnDataSet.SelectedSerialNumbersRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Epicor.Mfg.BO.UpdExtIssueReturnDataSet.SNFormatRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
    </members>
</doc>
